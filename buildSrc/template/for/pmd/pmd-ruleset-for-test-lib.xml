<?xml version="1.0"?>
<ruleset name="test-lib"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
    <!-- some project specific configuration -->
    <description>test library rules</description>
    <rule ref="category/java/design.xml/ExcessivePublicCount">
        <properties>
            <!-- integration test classes might get long, right-->
            <property name="minimum" value="75.0"/>
        </properties>
    </rule>
    <rule ref="category/java/design.xml/NcssCount">
        <properties>
            <!-- integration test methods might get long, right-->
            <property name="methodReportLevel" value="70"/>
            <property name="classReportLevel" value="1500"/>
            <property name="ncssOptions" value=""/>
        </properties>
    </rule>
    <rule ref="category/java/design.xml/ImmutableField">
        <properties>
            <property name="ignoredAnnotations"
                      value="lombok.Setter|lombok.Getter|lombok.Builder|lombok.Data|lombok.RequiredArgsConstructor|lombok.AllArgsConstructor|lombok.Value|lombok.NoArgsConstructor|org.mockito.Mock"/>
        </properties>
    </rule>
    <rule ref="category/java/design.xml/SingularField">
        <properties>
            <property name="ignoredAnnotations"
                      value="lombok.Setter|lombok.Getter|lombok.Builder|lombok.Data|lombok.RequiredArgsConstructor|lombok.AllArgsConstructor|lombok.Value|lombk.NoArgsConstructor|lombok.experimental.Delegate|org.mockito.Mock"/>
            <property name="checkInnerClasses" value="false"/>
            <property name="disallowNotAssignment" value="true"/>
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/ClassNamingConventions">
        <properties>
            <property name="classPattern" value="[A-Z][a-zA-Z0-9]*"/>
            <property name="abstractClassPattern" value="[A-Z][a-zA-Z0-9]*"/>
            <property name="interfacePattern" value="[A-Z][a-zA-Z0-9]*"/>
            <property name="enumPattern" value="[A-Z][a-zA-Z0-9]*"/>
            <property name="annotationPattern" value="[A-Z][a-zA-Z0-9]*"/>
            <property name="utilityClassPattern" value="[A-Z][a-zA-Z0-9]*"/>
        </properties>
    </rule>
    <rule ref="category/java/errorprone.xml/CloseResource">
        <properties>
            <property name="allowedResourceTypes"
                      value="java.io.ByteArrayOutputStream | java.io.ByteArrayInputStream | java.io.StringWriter | java.io.CharArrayWriter | java.util.stream.Stream | io.prometheus.client.Histogram.Timer | com.rabbitmq.client.Channel"/>
        </properties>
    </rule>
    <rule ref="category/java/design.xml/TooManyFields">
        <properties>
            <property name="maxfields" value="20"/>
        </properties>
    </rule>
    <rule ref="category/java/bestpractices.xml/JUnitTestContainsTooManyAsserts">
        <properties>
            <property name="maximumAsserts" value="20"/>
        </properties>
    </rule>
    <rule ref="category/java/design.xml/ExcessiveParameterList">
        <properties>
            <property name="minimum" value="20.0"/>
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/TooManyStaticImports">
        <properties>
            <property name="maximumStaticImports" value="50"/>
        </properties>
    </rule>
    <rule ref="category/java/design.xml/ExcessiveImports">
        <properties>
            <!-- tests might have excessive amount of import, e.g. integration tests-->
            <property name="minimum" value="100.0"/>
        </properties>
    </rule>
    <rule ref="category/java/design.xml/CouplingBetweenObjects">
        <properties>
            <property name="threshold" value="30"/>
        </properties>
    </rule>
    <!-- rule exclusions -->
    <rule ref="category/java/bestpractices.xml">
        <exclude name="GuardLogStatement"/>
        <exclude name="JUnitAssertionsShouldIncludeMessage"/>
        <exclude name="JUnitTestsShouldIncludeAssert"/>
        <exclude name="UseAssertTrueInsteadOfAssertEquals"/>
    </rule>

    <rule ref="category/java/codestyle.xml">
        <exclude name="LongVariable"/>
        <exclude name="ShortVariable"/>
        <exclude name="MethodArgumentCouldBeFinal"/>
        <exclude name="CommentDefaultAccessModifier"/>
        <exclude name="LocalVariableCouldBeFinal"/>
        <exclude name="AtLeastOneConstructor"/>
        <exclude name="DefaultPackage"/>
        <exclude name="ControlStatementBraces"/>
        <exclude name="UnnecessaryModifier"/>
        <exclude name="ShortMethodName"/>
        <exclude name="ShortClassName"/>
        <exclude name="OnlyOneReturn"/>
        <exclude name="UseUnderscoresInNumericLiterals"/>
        <exclude name="FieldNamingConventions"/>
        <exclude name="FieldDeclarationsShouldBeAtStartOfClass"/>
        <exclude name="LocalVariableNamingConventions"/>
        <exclude name="FormalParameterNamingConventions"/>
        <exclude name="MethodNamingConventions"/>
        <exclude name="GenericsNaming"/>
    </rule>

    <rule ref="category/java/design.xml">
        <exclude name="LawOfDemeter"/>
        <exclude name="DataClass"/>
        <exclude name="TooManyMethods"/>
        <exclude name="AvoidCatchingGenericException"/>
        <!--its ok to throw raw exception types in tests, right -->
        <exclude name="AvoidThrowingRawExceptionTypes"/>
        <exclude name="LoosePackageCoupling"/>
        <exclude name="UseUtilityClass"/>
        <exclude name="UseObjectForClearerAPI"/>
    </rule>

    <rule ref="category/java/documentation.xml">
        <exclude name="CommentSize"/>
        <exclude name="CommentRequired"/>
    </rule>

    <rule ref="category/java/errorprone.xml">
        <exclude name="BeanMembersShouldSerialize"/>
        <exclude name="DataflowAnomalyAnalysis"/>
        <exclude name="AvoidFieldNameMatchingTypeName"/>
        <exclude name="AvoidDuplicateLiterals"/>
        <exclude name="AvoidFieldNameMatchingMethodName"/>
        <exclude name="MissingSerialVersionUID"/>
    </rule>

    <rule ref="category/java/multithreading.xml">
        <exclude name="DoNotUseThreads"/>
    </rule>

    <rule ref="category/java/performance.xml">
        <exclude name="AvoidFileStream"/>
        <exclude name="ConsecutiveAppendsShouldReuse"/>
    </rule>

    <rule ref="category/java/security.xml"/>
</ruleset>
